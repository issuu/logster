#!/bin/bash

LOCKFILE=/var/run/logtail-logster.parsers.HaProxyLogster.HaProxyLogster-var-log-haproxy.log.lock
STATEFILE=/var/run/logtail-logster.parsers.HaProxyLogster.HaProxyLogster-var-log-haproxy.log.state

# pull this from the default file
unset GRAPHITE_HOST_PORT
unset STATSD_HOST_PORT
unset HAPROXY_SOCKET
unset REQUEST_HEADERS
unset CRAWLERHOSTS
unset ISSUU
unset MAGMA
unset USE_XFF_AS_CLIENTIP

test -f /etc/default/logster-haproxy-graphite && . /etc/default/logster-haproxy-graphite

if [ \( -z "${GRAPHITE_HOST_PORT}" -a -z "${STATSD_HOST_PORT}" \) -o -z "${HAPROXY_SOCKET}" ]; then
    echo 'Please set either ${GRAPHITE_HOST_PORT} or ${STATSD_HOST_PORT} and ${HAPROXY_SOCKET}'
    echo 'See /etc/default/logster-haproxy-graphite'
    exit 1
fi

unset REQUEST_HEADERS_OPTION
if [ -n "${REQUEST_HEADERS}" ]; then
    REQUEST_HEADERS_OPTION=" --headers ${REQUEST_HEADERS}"
fi

unset CRAWLERHOSTS_OPTION
if [ -n "${CRAWLERHOSTS}" ]; then
    CRAWLERHOSTS_OPTION=" --crawlerhosts ${CRAWLERHOSTS}"
fi

unset ISSUU_OPTION
if [ -n "${ISSUU}" ]; then
    ISSUU_OPTION=" --issuu"
fi

unset MAGMA_OPTION
if [ -n "${MAGMA}" ]; then
    MAGMA_OPTION=" --magma"
fi

unset USE_XFF_AS_CLIENTIP_OPTION
if [ -n "${USE_XFF_AS_CLIENTIP}" ]; then
    USE_XFF_AS_CLIENTIP_OPTION=" --xffip"
fi

LOGDIR=/var/log/logster/
test -d ${LOGDIR} || mkdir -p ${LOGDIR}

function do_work () {
    if [ -n "${STATSD_HOST_PORT}" ]; then
        timeout --kill-after=110 100 logster --output statsd \
            --statsd-host ${STATSD_HOST_PORT} \
            --parser-options "--socket ${HAPROXY_SOCKET}${CRAWLERHOSTS_OPTION}${REQUEST_HEADERS_OPTION}${ISSUU_OPTION}${MAGMA_OPTION}${USE_XFF_AS_CLIENTIP_OPTION}" \
            HaProxyLogster \
            /var/log/haproxy.log
    else
        timeout --kill-after=110 100 logster --output graphite \
            --graphite-host ${GRAPHITE_HOST_PORT} \
            --parser-options "--socket ${HAPROXY_SOCKET}${CRAWLERHOSTS_OPTION}${REQUEST_HEADERS_OPTION}${ISSUU_OPTION}${MAGMA_OPTION}${USE_XFF_AS_CLIENTIP_OPTION}" \
            HaProxyLogster \
            /var/log/haproxy.log
    fi
}

# Check if another is already running
if [ -e "${LOCKFILE}" ]; then
    A=$(stat --format=%Y ${LOCKFILE})
    B=$(date +%s)
    D=$(expr $B - $A)
    if [ $D -gt 200 ]; then
        pkill -9 -f 'perl.*logtail2'; sleep 20
        pkill -9 -f 'python.*logster'; sleep 10
        [ -e "${STATEFILE}" ] && rm -f ${STATEFILE}
        [ -e "${LOCKFILE}"  ] && rm -f ${LOCKFILE}
        do_work ; sleep 5
    else
        exit 0
    fi
fi

A=$(date +%s)
do_work
B=$(date +%s)
D=$(expr $B - $A)
if [ $D -ge 100 ]; then
    [ -e "${STATEFILE}" ] && rm -f ${STATEFILE}
    [ -e "${LOCKFILE}"  ] && rm -f ${LOCKFILE}
fi
if [ $D -ge 60 ]; then
    # try to catch up
    do_work
fi

